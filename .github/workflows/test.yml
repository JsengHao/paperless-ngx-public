name: test

on:
  push:
    tags: ngx-*
    branches-ignore:
      - 'translations**'
  pull_request:
    branches-ignore:
      - 'translations**'

jobs:
  codestyle:
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      -
        name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      -
        name: Persistent Github pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip${{ matrix.python-version }}
      -
        name: Install dependencies
        run: |
          pip install --upgrade pipenv
          pipenv install --system --dev --ignore-pipfile
      -
        name: Codestyle
        run: |
          cd src/
          pycodestyle --max-line-length=88 --ignore=E121,E123,E126,E226,E24,E704,W503,W504,E203
  codeformatting:
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Run black
        uses: psf/black@stable
        with:
          options: "--check --diff"
          version: "22.1.0"

  tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.9']
      fail-fast: false
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.python-version }}"
      -
        name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      -
        name: Persistent Github pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip${{ matrix.python-version }}
      -
        name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq --no-install-recommends unpaper tesseract-ocr imagemagick ghostscript optipng
          pip install --upgrade pipenv
          pipenv install --system --dev --ignore-pipfile
      -
        name: Tests
        run: |
          cd src/
          pytest
  